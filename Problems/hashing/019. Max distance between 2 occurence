package com.beginnerdsa.step3._1_Hashing;

import java.util.HashMap;
import java.util.Map;

/*
we need to find the maximum distance between 2 numbers that are same.
eg:{1, 1, 2, 2, 2, 1}
here, 1 has max distance from index 0 to 5 and 2 has max distance from 2 to 4, so 5-0=5 and 4-2=2 so
answer will be 5;

we will use hashmap and will put number along with its index in hashmap,
we will put only the first occurrence of a number and will compare to the next occurrence of the number
if that is greater than the previous max distance then we will update it with new max distance at last we will
print the max distance.




 */

public class _20_max_distance_between_2_occurence {
  public static void main(String[] args) {
    int[] arr = {1, 2, 1, 3, 1, 2};

    Map<Integer, Integer> map = new HashMap<>();
    int max = 0;
    for (int i = 0; i < arr.length; i++) {
      if (map.containsKey(arr[i]) && i - map.get(arr[i]) >= max) {
        max = i - map.get(arr[i]);
        continue;
      }
      map.put(arr[i], i);
    }
    System.out.println(max);
  }
}
