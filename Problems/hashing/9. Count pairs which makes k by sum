package com.beginnerdsa.step3;
/*
brute force: https://ideone.com/xlQHyb

optimized: https://ideone.com/PG8b5R


*/
import java.util.HashMap;
import java.util.Map;

public class _10_count_pairs_which_makes_k_by_sum {
  public static void main(String[] args) {

    // time complexity= O(n^2)
    //        int[] arr={1,2,3,4,2,0,5,6,7};
    //        int k=4;
    //        int count=0;
    //        for(int i=0;i<arr.length;i++){
    //            for(int j=i+1;j<arr.length;j++){
    //                if(arr[i]+arr[j]==k){
    //                    count++;
    //                }
    //            }
    //
    //        }
    //        System.out.println(count);


    int[] arr = {1, 2, 3, 4, 5};
    int k = 6;
    Map<Integer, Integer> map = new HashMap<>();
    int count = 0;
    for (int i = 0; i < arr.length; i++) {
      if (map.containsKey(k-arr[i])) {
        count+=map.get(k-arr[i]);
      } else {
        map.put(arr[i], map.getOrDefault(arr[i],0)+1);
      }
    }

    System.out.println(count);


  }
}
